{"version":3,"sources":["components/Feedback/Section.js","components/Feedback/Statistics.js","components/Feedback/FeedbackOptions.js","components/Feedback/AppFeedback.js","App.js","index.js","components/Feedback/Feedback.module.css"],"names":["Section","title","children","className","s","Statistics","good","neutral","bad","total","positivePercentage","text","FeedbackOptions","onLeaveFeedback","options","btnContainer","map","el","type","btn","onClick","AppFeedback","state","addFeedback","console","log","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Object","values","reduce","acc","Math","round","this","keys","Component","App","ReactDOM","render","StrictMode","document","querySelector","module","exports"],"mappings":"2OAIe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,eAAC,WAAD,WACE,oBAAIC,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,KCJQ,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IAGC,IAFDC,aAEC,MAFO,EAEP,MADDC,0BACC,MADoB,EACpB,EACD,OACE,cAAC,WAAD,UACE,+BACE,6BACE,oBAAGP,UAAWC,IAAEO,KAAhB,oBAA8BL,OAEhC,6BACE,oBAAGH,UAAWC,IAAEO,KAAhB,uBAAiCJ,OAEnC,6BACE,oBAAGJ,UAAWC,IAAEO,KAAhB,mBAA6BH,EAA7B,SAEF,6BACE,oBAAGL,UAAWC,IAAEO,KAAhB,qBAA+BF,EAA/B,SAEF,6BACE,oBAAGN,UAAWC,IAAEO,KAAhB,iCAA2CD,EAA3C,eCvBK,SAASE,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QACzD,OACE,oBAAIX,UAAWC,IAAEW,aAAjB,SACGD,EAAQE,KAAI,SAACC,GAAD,OACX,6BACE,wBACEC,KAAK,SACLf,UAAWC,IAAEe,IACbC,QAAS,kBAAMP,EAAgBI,IAHjC,SAKGA,KANIA,Q,ICFII,E,4MACnBC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPe,YAAc,SAACN,GACbO,QAAQC,IAAIR,GACZ,EAAKS,UAAS,SAACC,GAAD,sBACXV,EAAKU,EAAUV,GAAM,O,EAI1BW,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBhB,KADiB,EACXC,QADW,EACFC,K,EAIzBqB,gCAAkC,WAChC,IACMpB,EADSqB,OAAOC,OAAO,EAAKT,OACbU,QAAO,SAACC,EAAKhB,GAAN,OAAagB,EAAMhB,KAE/C,OAAOiB,KAAKC,MAAO,IAAM1B,EAAS,CAAC,EAAKa,MAAMhB,Q,uDAI9C,OACE,gCACE,cAACN,EAAD,CAASC,MAAM,wBAAf,SACE,cAACW,EAAD,CACEC,gBAAiBuB,KAAKb,YACtBT,QAASgB,OAAOO,KAAKD,KAAKd,WAI9B,cAACtB,EAAD,CAASC,MAAM,aAAf,SACiC,IAA9BmC,KAAKR,qBACJ,oBAEA,cAACvB,EAAD,CACEC,KAAM8B,KAAKd,MAAMhB,KACjBC,QAAS6B,KAAKd,MAAMf,QACpBC,IAAK4B,KAAKd,MAAMd,IAChBC,MAAO2B,KAAKR,qBACZlB,mBAAoB0B,KAAKP,6C,GA7CES,aCS1B,SAASC,IACtB,OACE,8BAuBE,cAAC,EAAD,M,YCjCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UAAmB,cAACH,EAAD,MACnBI,SAASC,cAAc,W,kBCRzBC,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,aAAe,+BAA+B,IAAM,sBAAsB,KAAO,0B","file":"static/js/main.e48e6041.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Feedback.module.css\";\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <Fragment>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Feedback.module.css\";\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total = 0,\r\n  positivePercentage = 0,\r\n}) {\r\n  return (\r\n    <Fragment>\r\n      <ul>\r\n        <li>\r\n          <p className={s.text}>Good : {good}</p>\r\n        </li>\r\n        <li>\r\n          <p className={s.text}>Neutral : {neutral}</p>\r\n        </li>\r\n        <li>\r\n          <p className={s.text}>Bad : {bad} </p>\r\n        </li>\r\n        <li>\r\n          <p className={s.text}>Total : {total} </p>\r\n        </li>\r\n        <li>\r\n          <p className={s.text}>Positive feedback : {positivePercentage} %</p>\r\n        </li>\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Feedback.module.css\";\r\n\r\nexport default function FeedbackOptions({ onLeaveFeedback, options }) {\r\n  return (\r\n    <ul className={s.btnContainer}>\r\n      {options.map((el) => (\r\n        <li key={el}>\r\n          <button\r\n            type=\"button\"\r\n            className={s.btn}\r\n            onClick={() => onLeaveFeedback(el)}\r\n          >\r\n            {el}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  increment: PropTypes.func,\r\n  options: PropTypes.array,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Section from \"./Section\";\r\nimport Statistics from \"./Statistics\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\n// import { number } from \"prop-types\";\r\n\r\nexport default class AppFeedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  addFeedback = (el) => {\r\n    console.log(el);\r\n    this.setState((prevState) => ({\r\n      [el]: prevState[el] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const values = Object.values(this.state);\r\n    const total = values.reduce((acc, el) => acc + el);\r\n\r\n    return Math.round((100 / total) * [this.state.good]);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            onLeaveFeedback={this.addFeedback}\r\n            options={Object.keys(this.state)}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() === 0 ? (\r\n            \"No feedback given\"\r\n          ) : (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// import Profile from \"./components/User\";\n// import Statistics from \"./components/Statistics\";\n// import FriendList from \"./components/FriendList\";\n// import TransactionHistory from \"./components/TransactionHistory\";\n// import Counter from \"./components/Counter\";\n// import Dropdown from \"./components/Dropdown\";\n// import ColorPicker from \"./components/ColorPicker\";\n// import AppUserForm from \"./components/UserForm/AppUserForm\";\nimport AppFeedback from \"./components/Feedback/AppFeedback\";\n// import user from \"./user-data.json\";\n// import statistics from \"./statistical-data.json\";\n// import friends from \"./friends-data.json\";\n// import transactions from \"./transactions-data.json\";\n// import colorPicker from \"./components/ColorPicker.json\";\n\nexport default function App() {\n  return (\n    <div>\n      {/* <Profile\n        url={user.avatar}\n        title={user.name}\n        tag={user.tag}\n        location={user.location}\n        stats={user.stats}\n      /> */}\n\n      {/* <Statistics title=\"Upload stats\" stats={statistics} /> */}\n\n      {/* <FriendList friends={friends} /> */}\n\n      {/* <TransactionHistory items={transactions} /> */}\n\n      {/* <Counter /> */}\n\n      {/* <Dropdown /> */}\n\n      {/* <ColorPicker options={colorPicker} /> */}\n\n      {/* <AppUserForm /> */}\n\n      <AppFeedback />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>{<App />}</React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Feedback_title__36XKl\",\"btnContainer\":\"Feedback_btnContainer__Dl-5d\",\"btn\":\"Feedback_btn__2w-tO\",\"text\":\"Feedback_text__1qvil\"};"],"sourceRoot":""}